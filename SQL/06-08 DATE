---------------------날짜 함수----------------------------

SELECT SYSDATE, CURRENT_DATE,
SYSTIMESTAMP, CURRENT_TIMESTAMP 
FROM DUAL;
--시스데이트와 커런트는 세계시간에 따라 다를 수 있다.

ALTER SESSION SET TIME_ZONE='09:00';

SELECT SYSDATE, CURRENT_DATE FROM DUAL;
ALTER SESSION SET NLS_DATE_FORMAT='YYYY-MM-DD HH24:MI';
ALTER SESSION SET NLS_DATE_FORMAT='YYYY-MM-DD AM HH:MI';

SELECT extract(YEAR FROM SYSDATE)FROM DUAL;
SELECT EXTRACT(DAY FROM SYSDATE)FROM DUAL;
SELECT EXTRACT(HOUR FROM SYSDATE)FROM DUAL;
SELECT EXTRACT(MINUTE FROM SYSTIMESTAMP)FROM DUAL;

--회원 중에서 2,3,11,12월에 가입한 회원을 조회하시오
SELECT * FROM MEMBER
WHERE EXTRACT(MONTH FROM REGDATE)IN(2,3,11,12);

--어제 날짜, 오늘, 다음날
SELECT SYSDATE-1, SYSDATE, SYSDATE+2 FROM DUAL;

SELECT sysdate from dual; 
SELECT SYSTIMESTAMP FROM DUAL;
ALTER SESSION SET NLS_DATE_FORMAT = 'YYYY/MM/DD';
COMMIT;

--날짜 추출 함수
SELECT EXTRACT(YEAR FROM SYSDATE)||'년' FROM DUAL; -- || 문자 연산자
SELECT EXTRACT(MONTH FROM SYSDATE)||'월' FROM DUAL;
SELECT EXTRACT(DAY FROM SYSDATE)||'일' FROM DUAL;

SELECT EXTRACT(HOUR FROM SYSDATE)||'시' FROM DUAL; --데이터는 시분초를 출력할 수 없다.
SELECT EXTRACT(HOUR FROM SYSTIMESTAMP) FROM DUAL; -- 왜안됌;
SELECT EXTRACT(MINUTE FROM SYSTIMESTAMP)||'분'FROM DUAL;

SELECT * FROM MEMBER
WHERE EXTRACT(MONTH FROM REGDATE) IN (2, 3, 11, 12);
SELECT * FROM MEMBER WHERE REGDATE IN(2, 3, 11, 12);

SELECT TO_DATE('2022/05/01')-2 "월드컵 전야제"FROM DUAL;
SELECT SYSDATE FROM DUAL;
SELECT ROUND(TO_DATE('2021/07/01'),'CC') FROM DUAL;
SELECT ROUND(TO_DATE('2021/07/01'),'YYYY') FROM DUAL;

SELECT ROUND(SYSDATE,'YEAR')FROM DUAL;

SELECT ROUND(SYSDATE,'YEAR'), TRUNC(SYSDATE,'YEAR') FROM DUAL;
SELECT ROUND(TO_DATE('2051/07/01'),TRUNC(TO_DATE('2051/07/01'),'CC')) FROM DUAL;

SELECT ENAME, SYSDATE, HIREDATE, TRUNC(MONTHS_BETWEEN(SYSDATE, HIREDATE))입사월수
FROM EMPLOYEE;

SELECT ENAME, SYSDATE, HIREDATE,
TRUNC(MONTHS_BETWEEN(SYSDATE,HIREDATE))
FROM EMPLOYEE;

SELECT MONTHS_BETWEEN(SYSDATE, REGDATE) FROM MEMBER;

--회원 중에서 가입한지 6개월이 안된 회원을 조회하시오.
SELECT * FROM MEMBER 
WHERE MONTHS_BETWEEN(SYSDATE, REGDATE) <6;

--회원 중에서 가입한지 6개월이상된 회원을 조회하시오.
SELECT * FROM MEMBER 
WHERE MONTHS_BETWEEN(SYSDATE, REGDATE) >=6;

SELECT ENAME, HIREDATE, ADD_MONTHS(HIREDATE, 6)
FROM EMPLOYEE;

SELECT ADD_MONTHS(SYSDATE,-2)FROM DUAL;

--회원 중에서 가입한지 6개월이 안된 회원을 조회하시오.
SELECT * FROM MEMBER 
WHERE ADD_MONTHS(SYSDATE, -6) < REGDATE;

--회원 중에서 가입한지 6개월 이상 된 회원을 조회하시오.
SELECT * FROM MEMBER 
WHERE ADD_MONTHS(SYSDATE, -6) >= REGDATE;

SELECT SYSDATE, NEXT_DAY(SYSDATE,'일')
FROM DUAL;
SELECT SYSDATE, NEXT_DAY(SYSDATE,1)
FROM DUAL;

--예를들어 오늘 화요일인데, 화요일로하면 NEXT_DAY 함수기 때문에 다음주 화요일로 설정됨.
select SYSDATE, NEXT_DAY(SYSDATE,'화')
FROM DUAL;
select SYSDATE, NEXT_DAY(SYSDATE,3)
FROM DUAL;

SELECT ENAME, HIREDATE, LAST_DAY(HIREDATE)FROM EMPLOYEE; 
SELECT SYSDATE, LAST_DAY(SYSDATE)FROM DUAL; --이번달 말일 설정

SELECT SYSDATE, LAST_DAY(ADD_MONTHS(SYSDATE,1))FROM DUAL; --다음달의 말일 설정

SELECT LAST_DAY('2021-07-02')FROM DUAL; --다음달 말일 설정
SELECT LAST_DAY('2000-02-02')FROM DUAL; --2월 말일
SELECT LAST_DAY('2000/02/02')FROM DUAL;
SELECT LAST_DAY(TO_DATE('2021/02/02'))FROM DUAL;
                            
SELECT 2 + '3' FROM DUAL; --숫자 + 문자열 JAVA에서는 23으로 계산, BUT 오라클은 자동형변환되서 연산되어 5가된다.
SELECT 2 + TO_NUMBER('3') FROM DUAL; --문자열을 숫자로 바꾸는 함수, 명시적형변환
--TO_DATE는 CHAR를 DATE로 바꿈 DATE를 CHAR로 바꾸려면 TO_CHAR

--NUMBER 형식을 문자열(VARCHAR2)로 변환하는 함수 TO_CHAR(NUMBER, [])

SELECT 12345678 FROM DUAL;
SELECT '12345678' FROM DUAL;
SELECT TO_CHAR(12345678) FROM DUAL;
SELECT TO_CHAR(12345678, '00,000,000') FROM DUAL; --9나 0으로 ,을 찍을수 있음
SELECT TO_CHAR(12345678, '$9,999,999,999,999') FROM DUAL; --달러
SELECT TO_CHAR(12345678.25, '$9,999,999,999,999') FROM DUAL; --소수점
SELECT TO_CHAR(12345678.25, '$9,999,999,999,999') FROM DUAL;

SELECT ENAME, HIREDATE, 
TO_CHAR(HIREDATE, 'YY-MM')"년 월",
TO_CHAR(HIREDATE, 'YYYY/MM/DD DAY')"년/월/일 요일"
FROM EMPLOYEE;

---DATE 형식을 문자열(VARCHAR2)로 변환하는 함수 TO_CHAR(DATE, [포맷형식])
SELECT TO_CHAR(SYSDATE, 'YYYY/MM/DD PM HH:MI:SS')FROM DUAL;
SELECT TO_CHAR(SYSDATE, 'YYYY/MM/DD HH24:MI:SS')FROM DUAL;
SELECT TO_CHAR(SYSDATE, 'RRRR/MM/DD HH24:MI:SS')FROM DUAL;
SELECT TO_CHAR(SYSDATE, 'YYYY/MM/DD HH:MI:SS')FROM DUAL;
SELECT TO_CHAR(SYSDATE, 'YYYY/MON/DD HH:MI:SS')FROM DUAL;

SELECT ENAME, HIREDATE FROM EMPLOYEE
WHERE HIREDATE = 19810220; --문자열로 바꿔줘야됨 안바꾸면 에러남
SELECT ENAME, HIREDATE FROM EMPLOYEE
WHERE HIREDATE = TO_DATE(19810220); --명시적형변환하면 가능


SELECT ENAME, HIREDATE FROM EMPLOYEE
WHERE HIREDATE = '19810220';            --자동형변환
SELECT ENAME, HIREDATE FROM EMPLOYEE
WHERE HIREDATE = TO_DATE('19810220');   --명시적형변환

SELECT TO_DATE('2021-05-01')FROM DUAL;
SELECT TO_DATE('2021-05-01 12:23:03')FROM DUAL; --데이트에 시간이 들어가면 에러남
SELECT TO_DATE('2021-05-01 12:23:03','YYYY-MM-DD HH:MI:SS')FROM DUAL;

SELECT TO_TIMESTAMP('2021-05-01 12:23:03','YYYY-MM-DD HH:MI:SS')FROM DUAL;
SELECT TO_TIMESTAMP('2021-05-01 12:23:03','YYYY-MM-DD HH24:MI:SS')FROM DUAL;

SELECT '2020' FROM DUAL;  --자동
SELECT TO_NUMBER('2020')+1 FROM DUAL;  --명시적

SELECT '100,000'-'50,000'FROM DUAL;--에러
SELECT '100,000'||'50,000'FROM DUAL;

SELECT TO_NUMBER('100000')-TO_NUMBER('50000')FROM DUAL; --명시적

SELECT * FROM EMPLOYEE;

SELECT NULL +3 FROM DUAL;

SELECT ENAME, SALARY, SALARY+COMMISSION 최종급여
FROM EMPLOYEE;
SELECT ENAME, SALARY, SALARY+NVL(COMMISSION,0) 최종급여
FROM EMPLOYEE;
SELECT COMMISSION, NVL(COMMISSION,0) FROM EMPLOYEE; -- 커미션이 NULL값이면 0이 된다.
SELECT COMMISSION, NVL(COMMISSION,10) FROM EMPLOYEE; --널값에 대체값 10이 들어감.

SELECT * FROM MEMBER;
SELECT NAME, AGE, AGE+3 FROM MEMBER;
SELECT NAME, AGE, TRUNC(AGE/10)*10||'대' FROM MEMBER;
SELECT NAME, AGE, TRUNC(NVL(AGE/10))*10||'대' FROM MEMBER;

--NVL2함
SELECT ENAME, SALARY, COMMISSION, SALARY*12+NVL(COMMISSION, 0) FROM EMPLOYEE;
SELECT ENAME, SALARY, COMMISSION, 
        NVL2(COMMISSION, SALARY*12+COMMISSION, SALARY*12) 
        FROM EMPLOYEE;
        
--NULLIF 함수
SELECT NULLIF('A','A'),NULLIF('A','B')FROM DUAL; --'A'값을 널로

SELECT AGE, NULLIF(AGE,21)FROM MEMBER; -- 21값을 NULL값으로 준다.

--COALESCE 함수
SELECT ENAME, JOB, COMMISSION, SALARY, COALESCE(COMMISSION, SALARY, 0)
FROM EMPLOYEE;--COALESCE갈호안에 널값이 아닌것을 반환한다.

SELECT ENAME, JOB, COMMISSION, SALARY, COALESCE(COMMISSION, SALARY, 0)
FROM EMPLOYEE 
ORDER BY JOB DESC; --자동오름차순 아래차순으로 할 땐 DESC 추가

--DECODE 함수
SELECT ENAME, DNO, DECODE(DNO, 10, 'ACCOUNTING',
                               20, 'RESEARCH',
                               30, 'SALES',
                               40, 'OPERATIONS',
                               'DEFAULT')
FROM EMPLOYEE
ORDER BY DNO;
--DECODE(기준값, 비교값, 출력값,, 비교값, 출력값, ...., 기본결과)

SELECT*FROM MEMBER;
SELECT NAME, DECODE(GENDER, '남성', 1, 2)성별 FROM MEMBER;--성별이 남성이면 1, 나머지는 2
SELECT NAME, DECODE(GENDER, '남성', 1, 
                            2)AS 성별 
FROM MEMBER;

SELECT PHONE, DECODE(SUBSTR(PHONE,1,3), '010', '신규번호',
                                 '011', 'SK',
                                 '016', 'KT',
                                 '017', 'X7',
                                 '018', 'X8',
                                 '019', 'LG',
                                 '기타')
FROM MEMBER;

--CASE 함수
SELECT ENAME, DNO,
        CASE WHEN DNO=10 THEN 'ACCOUNTING'
             WHEN DNO=10 THEN 'RESEARCH'
             WHEN DNO=10 THEN 'SALES'
             WHEN DNO=10 THEN 'OPERATIONS'
             ELSE 'DEFAULT'
        END
FROM EMPLOYEE
ORDER BY DNO;


SELECT * FROM EMPLOYEE;
ALTER SESSION SET NLS_DATE_FORMAT='YY/MM/DD';
--1.                    137P
SELECT SUBSTR(HIREDATE,1,2)년도, --(종목,~번째,~번째부터 ~까지)
       SUBSTR(HIREDATE,4,2)달
FROM EMPLOYEE;
--EXTRACT 함수로 하는법
SELECT ENAME, EXTRACT(YEAR FROM HIREDATE)년도, 
              EXTRACT(MONTH FROM HIREDATE)달 
FROM EMPLOYEE;

--2.
SELECT * FROM EMPLOYEE 
WHERE SUBSTR(HIREDATE,6,2)='04';

SELECT ENAME, SUBSTR(HIREDATE,4,2)입사월 FROM EMPLOYEE
WHERE SUBSTR(HIREDATE,4,2)='04';

SELECT * FROM EMPLOYEE
WHERE EXTRACT(MONTH FROM HIREDATE)='04';

--3 NOD(대상,나눌수) 나머지 값을 구하는 함수
SELECT * FROM EMPLOYEE
WHERE MOD(ENO,2)=0;

--4
SELECT TO_CHAR(HIREDATE,'YY/MON/DD DY') FROM EMPLOYEE;

--5
SELECT SYSDATE-'2021/01/01'FROM DUAL; --에러
SELECT SYSDATE-TO_DATE('2021/01/01')FROM DUAL;
SELECT SYSDATE-TO_DATE('2021/01/01','YY/MM/DD')FROM DUAL;
SELECT TRUNC(SYSDATE-TO_DATE('2021/01/01','YY/MM/DD'))FROM DUAL;

--6 NVL2(대상,널이 아니면,널이면)
SELECT ENO, ENAME, NVL2(MANAGER,MANAGER,0)MANAGER FROM EMPLOYEE;
SELECT ENO, JOB, ENAME, NVL2(MANAGER, MANAGER, 0) FROM EMPLOYEE ORDER BY JOB;

--7
SELECT ENO, ENAME, JOB, SALARY FROM EMPLOYEE;
SELECT ENO, ENAME, JOB, SALARY, DECODE(JOB, 'ANALIST',SALARY+200,
                                            'SALESMAN',SALARY+180,
                                            'MANAGER',SALARY+150,
                                            'CLERK',SALARY+100,
                                            SALARY)UPDATE_SALARY --"인상된 급여" 공백때매 따움표 표시
FROM EMPLOYEE ORDER BY JOB;


/*
SELECT문의 구절
SELECT, FROM, WHERE, GROUP BY, HAVING, ORDER BY 순서대로
WHERE과 HAVING은 같은 성향을 띄고 있는데, 차이점은
GROUP BY 뒤에 WHERE가 가야할 경우 HAVING을 사용해야함.
*/

SELECT * FROM MEMBER;
SELECT * FROM MEMBER ORDER BY NAME ASC; --ASC어센딩 생략가능
SELECT * FROM MEMBER ORDER BY NAME DESC;

--'강'씨 성을 가진 회원을 조회하시오.(단, 나이를 오름차순 정렬)
SELECT * FROM MEMBER
WHERE NAME LIKE '강%' ORDER BY AGE;
SELECT * FROM MEMBER
WHERE NAME LIKE '강%' ORDER BY AGE ASC;

SELECT * FROM MEMBER
WHERE NAME LIKE '강%' ORDER BY AGE DESC;

