--9장. 데이터 조작과 트랜잭션 추가내용
--4. 트랜잭션 관리(데이터 조작어(DML)만 사용 : insert, update, delete)
--오라클은 트랜잭션 기반으로 데이터의 일관성을 보장함
--예 : 두 계좌
--'출금계좌의 출금금액'='입금계좌의 입금금액'이 동일
-- update			insert
--반드시 두 작업은 함께 처리되거나 함께 취소
--출금처리는 되었는데 입금처리가 되지 않앗다면 데이터 일관성을 유지못함

--트랜잭션 처리요건 : ALL-OR-Nothing 반드시 처리되든지 -> 데이터의 일관성을 유지, 안정적으로 데이터 복구

--commit   : 데이터 추가, 수정, 삭제 등 실행됨과 동시에 트랙젝션에 진행된다.
--			 성공적으로 변경된 내용을 영구히 저장하기 위해서는 반드시 commit을 해줘야한다. 이클립스는 자동 커밋됨. 롤백도안됨
--			 롤백을 하고싶으면 sql developer에서 해야됨.
--rollback : 작업을 취소
--			 트랜잭션으로 인한 하나의 묶음 처리가 시작되기 이전 상태로 되돌림.
drop table dept_copy; --실패 자식테이블 참조키가 있어서.
drop table dept_copy cascade constraints; --자식테이블의 참조키 제약조건까지 삭제하면 연쇠적 drop가능

create table dept_copy
AS
select * from department;

select * from dept_copy;
--Run SQL에서 테스트 함 (이클립스에서는 자동으로 AUTO COMMIT되므로)
SQL> conn system/1234
Connected.
SQL> delete dept_copy;

4 rows deleted.

SQL> select * from dept_copy;

no rows selected

SQL> rollback;

Rollback complete.

SQL> select * from dept_copy;

       DNO DNAME                        LOC
---------- ---------------------------- --------------------------
        10 ACCOUNTING                   NEW YORK
        20 RESEARCH                     DALLAS
        30 SALES                        CHICAGO
        40 OPERATIONS                   BOSTON

SQL> delete dept_copy where dno=10;

1 row deleted.

SQL> savepoint d10;

Savepoint created.

SQL> delete dept_copy where dno=20;

1 row deleted.

SQL> savepoint d20;

Savepoint created.

SQL> delete dept_copy where dno=30;

1 row deleted.

SQL> rollback d10;
rollback d10
         *
ERROR at line 1:
ORA-02181: invalid option to ROLLBACK WORK


SQL> rollback to d10;

Rollback complete.

SQL> select * from dept_copy;

       DNO DNAME                        LOC
---------- ---------------------------- --------------------------
        20 RESEARCH                     DALLAS
        30 SALES                        CHICAGO
        40 OPERATIONS                   BOSTON

SQL> commit;

Commit complete.
