import java.util.Arrays;

public class ArrayInArray {

	public static void main(String[] args) {
		/*** 2차원 배열 선언 방법-1 ***/
		int[][] m= new int[2][3]; //[행][열]
		System.out.println(Arrays.toString(m[0]));//0행
		System.out.println(Arrays.toString(m[1]));
	
		int i;
		for(i=0;i<m.length;i++) //{
			System.out.println(Arrays.toString(m[i]));//반복문이 한줄일때는 {}생략
		//}
		System.out.println();
		
		System.out.print(m[0][0]+", ");
		System.out.print(m[0][1]+", ");
		System.out.println(m[0][2]);
		
		System.out.print(m[1][0]+", ");
		System.out.print(m[1][1]+", ");
		System.out.println(m[1][2]);
		
		m[0][0]=88; m[0][1]=97; m[0][2]=75;
		m[0][0]=86; m[0][1]=83; m[0][2]=95;//math 약자
		
		/**
		 * 과제-4 반복문(for)을 이용하여 int타입 2차원 배열의 값 출력하기
		 * 		i=0 j=0~2	[88, 97, 75]
		 * 		i=1 j=0~2	[86, 83, 95]
		 */
		
		/*** 2차원 배열 선언 방법-2 ***/
		int[][] e=new int[2][];
		System.out.println(Arrays.toString(e));
		
		e[0]=new int[2];//[0,0]
		e[1]=new int[3];//[0,0,0]
		
		System.out.println(Arrays.toString(e));
		
		System.out.println(Arrays.toString(e[0]));
		System.out.println(Arrays.toString(e[1]));
		
		try {
			e[0][0]=77; e[0][1]=86; //여기만 실행되고
			e[0][2]=93;//java.lang.ArrayIndexOutOfBoundsException객체 생성->JVM이 예외객체를 던지면
			e[1][0]=97; e[1][1]=66; e[1][2]=53;//싱행하지 않고
		} catch (Exception e1) {//잡아서
			e1.printStackTrace();//처리함
		}
		e[1][0]=97; e[1][1]=66; e[1][2]=53;
		for(i=0;i<e.length;i++) {
			System.out.println(Arrays.toString(e[i]));
		}
		/* 널포인트익셉션, ArrayIndexOutOfBoundsException
		 * 예외는 될 수 있으면 try~catch로 예외처리로 처리하지 말고
		 * 프로그래머가 실수를 잡아서 처리하는 방식으로 하는 것이 좋다.
		 */
		
		/*** 2차원 배열 선언 방법-3 ***/
		int[][] s=new int[2][];
		
		s[0]=new int[] {87,99}; //[87,93]; 초기값을 가진 배열객체
		s[1]=new int[] {57,44,25}; //[97,88,100]; 초기값을 가진 배열객체
		
		int[] s1= {11,33,22};
		
		/*** 2차원 배열 선언 방법-4 ***/
		int[][] java = {
						{100, 95}, //1반
						{77, 83, 81, 79}, //2반
						{90, 89, 85,} //3반
						};
		
		//int[][] java2 = {{1,2},{3,4,5,6},{7,8,9}};
		}
		
		
	}
